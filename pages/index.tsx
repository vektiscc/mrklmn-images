// pages/index.tsx

import { useState, useRef, useEffect } from 'react'

export default function Home() {
  const [preview, setPreview] = useState<string | null>(null)
  const [uploading, setUploading] = useState(false)
  const [uploadResult, setUploadResult] = useState<any>(null)
  const fileInputRef = useRef<HTMLInputElement>(null)

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ API
  const uploadFile = async (file: File) => {
    const formData = new FormData()
    formData.append('file', file)

    setUploading(true)
    setUploadResult(null)

    const res = await fetch('/api/upload', {
      method: 'POST',
      body: formData,
    })

    const data = await res.json()
    setUploading(false)
    setUploadResult(data)

    if (data.url) {
      setPreview(data.url)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
  useEffect(() => {
    const handlePaste = (e: ClipboardEvent) => {
      const item = e.clipboardData?.items[0]
      if (item && item.type.startsWith('image/')) {
        const file = item.getAsFile()
        if (file) {
          uploadFile(file)
        }
      }
    }

    window.addEventListener('paste', handlePaste)
    return () => window.removeEventListener('paste', handlePaste)
  }, [])

  return (
    <div style={{ padding: '2rem', fontFamily: 'sans-serif', maxWidth: 800, margin: '0 auto' }}>
      <h1>üì∏ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤</h1>

      <p>–í—ã –º–æ–∂–µ—Ç–µ:</p>
      <ul>
        <li>–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é</li>
        <li>–í—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ (–Ω–∞–∂–º–∏—Ç–µ <b>Ctrl+V</b>)</li>
        <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <b>ShareX</b> (—Å–º. –Ω–∏–∂–µ)</li>
      </ul>

      <div style={{ margin: '1rem 0' }}>
        <input
          ref={fileInputRef}
          type="file"
          accept="image/*"
          style={{ display: 'none' }}
          onChange={(e) => {
            const file = e.target.files?.[0]
            if (file) uploadFile(file)
          }}
        />
        <button onClick={() => fileInputRef.current?.click()} disabled={uploading}>
          üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        </button>
      </div>

      {uploading && <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>}
      {uploadResult?.error && <p style={{ color: 'red' }}>–û—à–∏–±–∫–∞: {uploadResult.error}</p>}
      {uploadResult?.url && (
        <div style={{ marginTop: '1rem' }}>
          <p>‚úÖ –ó–∞–≥—Ä—É–∑–∏–ª–æ—Å—å:</p>
          <a href={uploadResult.url} target="_blank" rel="noopener noreferrer">{uploadResult.url}</a>
          <p><b>–£–¥–∞–ª–∏—Ç—å:</b> <a href={uploadResult.delete_url}>{uploadResult.delete_url}</a></p>
          <img src={uploadResult.url} alt="preview" style={{ maxWidth: '100%', marginTop: '1rem' }} />
        </div>
      )}

      <hr style={{ margin: '2rem 0' }} />

      <h2>üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ShareX</h2>
      <p>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ –≤ ShareX ‚Üí Destinations ‚Üí Custom uploader:</p>

      <pre style={{
        background: '#f0f0f0',
        padding: '1rem',
        overflowX: 'auto',
        fontSize: '0.9rem'
      }}>
{`{
  "Name": "mrklmn",
  "RequestType": "POST",
  "RequestURL": "https://${typeof window !== 'undefined' ? window.location.host : '[your-domain]'}/api/upload",
  "FileFormName": "file",
  "ResponseType": "JSON",
  "URL": "$json:url"
}`}
      </pre>
    </div>
  )
}
